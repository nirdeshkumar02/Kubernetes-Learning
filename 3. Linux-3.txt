1. Functions
======================================
a. A function block -

#!/bin/bash
function score_sum {
    sum=0
    while true
      do 
        read -p "enter a score: " score
        if  [ "$score" == "q" ]
        then
            break
        fi 
        sum=$(($sum+$score))
	  echo "Total Sum: $sum"
      done
}

++++++++++++++++++++++++++++++++++++++++++++

b. Passing Parameter to function -

#!/bin/bash
function create_file() {
    file_name=$1
    is_shell_script=$2
    touch $file_name
    echo "file $file_name Created"
    if [ "$is_shell_script" = true ]
    then
        chmod u+x $file_name
	  echo "Added execute permission"
    fi
} 

Calling Function - 
create_file test.text
create_file myfile.yaml
create_file script.sh true

++++++++++++++++++++++++++++++++++++++++++++++

c. Returning output from function

function sum() {
    total=$(($1+$2))
    return $total
}

sum 2 10
result=$?   # capture value return by last command

echo "Sum of 2 and 10 is : $result"

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

2. Environment Variables
======================================

Storing env values for a current session. It will delete if you close the sessions.
a. export DB_USERNAME=dbuser
b. export DB_PASSWORD=dbpass
c. printenv | grep DB  # Grab the env from all envs shown by printenv
d. unset DB_USERNAME  # Delete the environment

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Storing user specific envs for all sessions use this. Only Specific for a particular user for which you setup. 
e. store the envs in a file available for all users - ./bashrc
f. open .bashrc file - vi .bashrc
g. enter all above envs to end of files
h. run this command to load the envs. - source ~/.bashrc

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Storing System Wide envs for all session. For all users and sessions.
i. vim welcome - enter a line you want to write
j. give executable permission - chmod a+x welcome
k. add this file path to the ./bashrc file in end - PATH=$PATH:/home/nirdesh
l. load the env - source .bashrc
m. run welcome and you will get the value inside the welcome

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

3. Networking Basics
=======================================================

a. LAN - Collection of devices connected together in one physical location. eg - Home, School and each device has a unique IP Address.
b. An IP Address can be range from 0.0.0.0 to 255.255.255.255

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

c. How Device talk to each other devices ? 
   => Switch presents within the LAN and faciliatest the connection between all the devices within LAN.

d. How Devices talk to other devices outside LAN?
   => For Connecting those devices Router helps, it presents between LAN and WAN so that it allows networked devices to access the internet.

    Phone ======> Switch =========> Router ===========> Facebook
    Router has its own IP called as Gateway.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

e. When devices are connected to LAN then all devices have same IP Address Range to identify the devices in same network. These IP address ranges are decided by Subnet.
Subnet - A logical subdivision of an IP Network. 
Subnetting - Process of dividing a network into two or more networks.

example - Let we have an ip - 192.168.0.0 and subnet mask - 255.255.255.0  - Here 1st three octate can't changed for this IP, only 4th octate can change.
	    All IP starting with 192.168.0.x belongs to the same LAN and it can goes - 192.168.0.0 to 192.168.0.255
	    
	    Let we have an ip - 192.168.0.0 and subnet mask - 255.255.0.0  - Here 1st two octate can't changed for this IP, only 3 and 4th octate can change.
	    All IP starting with 192.168.x.x belongs to the same LAN and it can goes - 192.168.0.0 to 192.168.255.255

In shorthand - It is also known as CIDR - Classless Inter-Domain Routing eg. 192.168.0.0/255.255.0.0 => 192.168.0.0/16, 192.168.0.0/255.255.255.0 => 192.168.0.0/24


Example - 

LAN with IP - 192.168.0.0/16 which means - 192.168.0.0/255.255.0.0

Connected Devices with IPs
Switch - 192.168.1.0
Router - 192.168.1.1
Laptop 1 - 192.168.1.11
Laptop 2 - 192.168.1.20 

Case 1 - When Request in Same Network -
---------------------------------------

If we send a request for ip 192.168.1.20 from Laptop 1 ------> Switch ----------> Laptop 2

Case 2 - When Request in WAN -
------------------------------
Laptop 1 request facebook ip (77.50.166.2) ---------> Switch checks this request --------> Router ------------> Server with IP (77.50.166.2)

Any Device needs 3 pieces of data for communication - IP Address, Subnet, Gateway

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

f. Network Address Translation (NAT)
--------------------------------------

Laptop (192.168.1.10) -------> Router (192.168.1.1) --------------> facebook 
Here Laptop sends request for accessing facebook now, Request goes to router first here NAT replace the Laptop IP to Router IP and forward it to facebook.

Benefits - Security and Protection of devices, Reuse Private IP address means Two or More Org can have same private IP address.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

g. Firewall - A firewall is a system or sets of rules that prevent unauthorized access from entering a private network. 
		  Using Firewall Rules you can define, Which request are allowed like -
		  1. Which IP Address in your network is accessible.
		  2. Which IP Address can access your server.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

h. DNS - Domain Name Service - DNS helps in translates domain name to IP Address.
   
How Does DNS manage all IP Address ? 

=> DNS Follows Hierarical Structure -

Root Domains --------> TLD (Top Level Domain) (.mil, .edu, .com, .org, .net, .gov) ------> GLD (Geo Level Domain) (.at, .ca, .in, .us, .fr, .uk) -------> OLD (Other Level)

All these Names and Address are take care by ICANN - Internet Corporation For Assigned Names and Numbers.

ICANN manages the TLD Development and architecture of the internet domain space and Authorizes Domain Name Registrar.

Example - How www.facebook.com works when requested by laptop?

=> A Laptop has preinstalled DNS Client, This DNS client send request to Recursive Name Server (own by our ISP) and search IP for specified URL in cache.

IF FOUND =>  Send the IP back to switch. switch check the IP if belongs to it else send to Router and router search this ip to world.
IF Not Found => 
	Recursive Name Server send request to Root Server (.) to check ip address for facebook.com  and return back the TLD (.com).
	Again Recursive Name Server send request to TLD (.com) to check ip address for facebook.com and return back the list of "Authoritative Name Server"
	Authoritative Name Server is responsible for knowing everything about domain, including IP.
	Again Recursive Name Server send request to Authoritative Name Server to check ip address for facebook.com and return back the "IP Address".

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

3. Networking Commands -
===============================
a. ifconfig - Return list about network, subnet, ip address and more.
b. netstat - return the active connection means application which are actively listen on machine port.
c. ps aux - current running process and programs with ports and resources.
d. nslookup google.com - return the ip address of any domain name 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

4. SSH
=======================
Use Cases - Copy File to Remote Server
		Install Software on new server

2 ways to authenticate - 1. Username and Password
				 2. SSH Key Pair

SSH Key Pair ==> Client creates an SSH key Pair => [Key Pair = Private Key + Public Key]
Private Key is stored securely on the client machine.
Public Key is store to remote server for secure connection.
			  	   					
ssh-keygen -t rsa to generate Key Pair for ssh

SCP = Secure Copy = Allows us to securely copy files and directories. Secure meaning files and password are encrypted.
scp -i .ssh/id_rsa test.sh root@ipaddress:/root => copy test.sh file to remote server.










